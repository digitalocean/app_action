# release-drafter automatically creates a draft release for you each time you complete a PR in the main branch.
# It uses GitHub labels to categorize changes (See categories) and draft the release.
# release-drafter also generates a version for your release based on GitHub labels. You can add a label of 'major',
# 'minor' or 'patch' to determine which number in the version to increment.
# You may need to add these labels yourself.
# See https://github.com/release-drafter/release-drafter
name-template: "$RESOLVED_VERSION"
tag-template: "$RESOLVED_VERSION"
change-template: "- $TITLE by @$AUTHOR (#$NUMBER)"
no-changes-template: "- No changes"
categories:
  - title: "📦 Dependencies"
    labels:
      - "dependencies"
  - title: "📚 Documentation"
    labels:
      - "documentation"
  - title: "🚀 New Features"
    labels:
      - "enhancement"
  - title: "🐛 Bug Fixes"
    labels:
      - "bug"
  - title: "🧰 Maintenance"
    labels:
      - "maintenance"
version-resolver:
  major:
    labels:
      - "major"
  minor:
    labels:
      - "minor"
  patch:
    labels:
      - "patch"
  default: patch
template: |
  $CHANGES

  ## 👨🏼‍💻 Contributors

  $CONTRIBUTORS
autolabeler:
  - label: "documentation"
    files:
      - "**/*.md"
  - label: "enhancement"
    files:
      - "internal/**/*"
  - label: "maintenance"
    files:
      - ".github/**/*"
      - "vendor/**/*"
      - "testdata/**/*"
